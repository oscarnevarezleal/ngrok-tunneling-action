name: 'Ngrok TCP Tunelling'
description: 'A github action for tunelling TCP traffic from within Workflow environemt'

branding:
  icon: 'activity'
  color: 'green'

inputs:
  timeout:
    description: 'Challenge deployment timeout'
    required: true
    default: '1h'
  port:
    description: 'The port to forward traffic to'
    required: true
  ngrok_authtoken:
    description: 'Ngrok authorization token'
    required: true

outputs:
  public-url:
    description: "ngrok public-url"
    value: ${{ steps.ngrok-runner.outputs.public-url }}
runs:
  using: "composite"
  steps:
    - run: wget -q https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
      shell: bash
    - run: unzip -qq ngrok-stable-linux-amd64.zip && rm ngrok-stable-linux-amd64.zip
      shell: bash
    - run: mv ./ngrok /usr/bin/ngrok
      shell: bash
    - run: /usr/bin/ngrok authtoken ${{ inputs.ngrok_authtoken }}
      shell: bash
    - run: timeout ${{ inputs.timeout }} /usr/bin/ngrok http ${{ inputs.port }} > /dev/null &
      shell: bash
    - id: ngrok-runner
      run: |
        sleep 5
        curl -s http://localhost:4040/api/tunnels > tunnels.json
        publicUrl=$(cat tunnels.json | jq -rc '.tunnels[0].public_url')
        echo "::set-output name=public-url::${publicUrl}"
      shell: bash